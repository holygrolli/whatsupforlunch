name: Create release and build website

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'locations/**'
      - 'site/**'
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/holygrolli/whatsupforlunch:main
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: build data.json
        shell: bash
        run: |
          mkdir -p tmp-data
          for loc in $(ls -1 data | grep -v galeria);
          do
            jq '.offers = inputs' data/${loc}/details.json <(jq -s 'reduce .[] as $item ({}; . * $item)' data/${loc}/2*.json) > tmp-data/merged_${loc}.json
          done
          jq -c --slurpfile locations <(cat tmp-data/merged_*.json | jq -s) '.locations = $locations[0]' <(echo '{"locations": ""}') > site/public/data.json
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          skip-commit: "true"
          skip-git-pull: "true"
          skip-tag: "true"
          git-path: "site"
      - name: build site ðŸ”¨
        working-directory: site
        shell: bash
        env:
          REACT_APP_VERSION: ${{ steps.changelog.outputs.tag }}
        run: |
          npm install
          if [[ "${{ github.head_ref || github.ref_name }}" != "main" ]]; then
            export PUBLIC_URL="/${{ github.head_ref || github.ref_name }}"
          fi
          npm run build
      - name: deploy ðŸš›
        shell: bash
        run: |
          if [[ "${{ github.head_ref || github.ref_name }}" == "main" ]]; then
            export TARGET_PATH="${{ secrets.DEPLOY_PATH }}"
          else
            export TARGET_PATH="/dev.lunchdeal.li/httpdocs/${{ github.head_ref || github.ref_name }}"
          fi
          echo -e "${{ secrets.DEPLOY_KEY }}" >__TEMP_INPUT_KEY_FILE
          chmod 600 __TEMP_INPUT_KEY_FILE
          ssh -o StrictHostKeyChecking=no -i __TEMP_INPUT_KEY_FILE "${{ secrets.DEPLOY_USER }}"@"${{ secrets.DEPLOY_HOST }}" "rm -rf /tmp/upload_tmp; mkdir /tmp/upload_tmp"
          scp -o StrictHostKeyChecking=no -i __TEMP_INPUT_KEY_FILE -r site/build/* "${{ secrets.DEPLOY_USER }}"@"${{ secrets.DEPLOY_HOST }}":/tmp/upload_tmp
          ssh -o StrictHostKeyChecking=no -i __TEMP_INPUT_KEY_FILE "${{ secrets.DEPLOY_USER }}"@"${{ secrets.DEPLOY_HOST }}" "rm -rf ${TARGET_PATH}/*; mkdir -p ${TARGET_PATH}; cp -R /tmp/upload_tmp/* ${TARGET_PATH}"
          #"${{ secrets.DEPLOY_PATH }}"
      - name: Conventional Changelog Action
        id: tag
        uses: TriPSs/conventional-changelog-action@v3
        with:
          skip-commit: "true"
          skip-git-pull: "true"
          skip-tag: "false"
          git-path: "site"
      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          