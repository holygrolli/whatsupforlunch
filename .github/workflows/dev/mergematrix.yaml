name: ratskeller
on:
  workflow_dispatch:
permissions: 
  contents: write
  packages: write
jobs:
  download:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/holygrolli/whatsupforlunch:sha-979e9b6-2024-08-08
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: get new links
        shell: bash
        run: |
          WD=${PWD}
          mkdir -p tmp
          cat <<EOF > tmp/scraped_links.txt
          file1
          file2
          file3
          EOF

          cd tmp
          touch file1_separated_1.pdf
          touch file1_separated_2.pdf
          touch file2_separated_1.pdf
          touch file2_separated_2.pdf
          touch file3_separated_1.pdf
          touch file3_separated_2.pdf
          find . -type f -name "*.pdf" -and -not -name "*separated*" -exec rm {} \;
      - id: setmatrix
        working-directory: tmp
        run: |
          matrixInput=$(find . -name '*.pdf' -printf '%P\n') # Creates array of all pdf files in tmp folder
          # Start Generate Json String
          echo "$matrixInput" | \
          jq --slurp --raw-input -c 'split("\n")[:-1] | map(select(length>0))' > matrix
          cat ./matrix
          # End Generate Json String
          matrixStringifiedObject=$(cat ./matrix) # Use this as jq @sh not working right
          echo "::set-output name=matrix::$matrixStringifiedObject"
      - name: Archive all pdfs
        uses: actions/upload-artifact@v3
        with:
          name: pdfs
          retention-days: 30
          path: |
            tmp
  process:
    needs: download
    if: ${{ needs.download.outputs.matrix != '' && toJson(fromJson(needs.download.outputs.matrix)) != '[]' }}
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/holygrolli/whatsupforlunch:sha-979e9b6-2024-08-08
    strategy:
      max-parallel: 1
      matrix:
        files: ${{fromJson(needs.download.outputs.matrix)}}
        # include:
        #   - files: KW-27-und-KW-28_2023_separated_2.pdf
    concurrency: singlethread
    steps:
    - name: checkout source code
      uses: actions/checkout@v3
    - name: Download pdf artifacts
      uses: actions/download-artifact@v3
      with:
        name: pdfs
        path: downloadtmp
    - name: copy step files
      run: |
        mkdir tmp
        cd tmp
        cp ../downloadtmp/${{ matrix.files }} .
    - name: processing steps
      working-directory: tmp
      run: |
        mkdir -p ../success-pdfs
        [ "${{ matrix.files }}" = "file3_separated_2.pdf" ] && exit 1
        cp ${{ matrix.files }} ../success-pdfs
    - name: Archive final files
      uses: actions/upload-artifact@v3
      with:
        name: success-pdfs
        retention-days: 5
        path: |
          success-pdfs
    - name: Archive all tmp files
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.files }}-processed
        retention-days: 5
        path: |
          tmp
  publish:
    needs: process
    if: success() || failure ()
    runs-on: ubuntu-24.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Download originally downloaded pdf artifacts
        uses: actions/download-artifact@v3
        with:
          name: pdfs
          path: downloadtmp
      - name: Download successfully processed pdf artifacts
        uses: actions/download-artifact@v3
        with:
          name: success-pdfs
          path: success-pdfs
      - name: process csv with chatgpt
        working-directory: success-pdfs
        shell: bash
        run: |
          cat ../data/ratskeller/scraped_done.txt
          cat ../downloadtmp/scraped_links.txt
          for file in $(find . -type f -name "*.pdf" -printf '%P\n');
          do
            echo "found file $file : ${file%_separated*}"
            cat ../data/ratskeller/scraped_done.txt <(echo $'\n'$(cat ../downloadtmp/scraped_links.txt | grep ${file%_separated*})) | sort -u | grep . > scraped_done.txt
            mv scraped_done.txt ../data/ratskeller/scraped_done.txt
          done
          cat ../data/ratskeller/scraped_done.txt
