name: Build website

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
        default: 'snapshot'
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        default: 'snapshot'
      workflowcall:
        required: false
        type: boolean
        default: true
    secrets:
      DEPLOY_KEY:
        required: true
      DEPLOY_USER:
        required: true
      DEPLOY_HOST:
        required: true
      DEPLOY_PATH:
        required: true
  push:
    branches:
      - 'develop'
      - 'main'
  pull_request:
    branches-ignore:
      - 'main'
concurrency: ${{ github.actor == 'dependabot[bot]' && github.run_id || 'ssh-deploy' }}
jobs:
  changes:
    runs-on: ubuntu-24.04
    # Required permissions
    permissions:
      contents: read
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      data: ${{ steps.filter.outputs.data }}
      frontend: ${{ steps.filter.outputs.frontend }}
      locations: ${{ steps.filter.outputs.locations }}
      workflow: ${{ steps.filter.outputs.workflow }}
    steps:
    - uses: actions/checkout@v3
      with:
        # This may save additional git fetch roundtrip if
        # merge-base is found within latest 20 commits
        fetch-depth: 20
    - name: Debug event data
      run: |
        echo head_ref=${{ github.head_ref }}
        echo ref_name=${{ github.ref_name }}
        echo event_name=${{ github.event_name }}
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ ((github.head_ref || github.ref_name) == 'main' && 'main') || '' }}
        filters: |
          data:
            - 'data/**'
          frontend:
            - 'site/**'
          locations:
            - 'locations/**'
          workflow:
            - '.github/workflows/site.yaml'
  build:
    needs: changes
    if: >-
      ${{ (github.ref_name == 'main' && inputs.workflowcall) && (inputs.comment != 'run on main only if workflowcall otherwise always')
      || (needs.changes.outputs.frontend == 'true' || needs.changes.outputs.locations == 'true') && (inputs.comment != 'run only if frontend or locations change, i.e. this is a release')
      || (needs.changes.outputs.data == 'true' || needs.changes.outputs.workflow == 'true' || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' && (inputs.comment != 'run when data or workflow changes or when manually triggered')) }}
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/holygrolli/whatsupforlunch:sha-979e9b6-2024-08-08
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add SHORT_SHA env property with commit short sha
        id: gitvars
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> "$GITHUB_OUTPUT"
      - name: build data.json
        shell: bash
        run: |
          mkdir -p tmp-data
          for loc in $(ls -1 data);
          do
            jq '.offers = inputs' data/${loc}/details.json <(jq -s 'reduce .[] as $item ({}; . * $item)' data/${loc}/2*.json) > tmp-data/merged_${loc}.json
          done
          jq -c --slurpfile locations <(cat tmp-data/merged_*.json | jq -s) '.locations = $locations[0]' <(echo '{"locations": ""}') > site/public/data.json
      - name: Set build version
        id: set-version
        shell: bash
        run: |
          git config --global --add safe.directory $PWD
          if [[ -n "${{ github.event.inputs.version }}" && "${{ github.event.inputs.version }}" != "snapshot" ]]; then
            echo "BUILD_VERSION=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            git describe --tags --abbrev=0 && echo "BUILD_VERSION=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT" || echo "BUILD_VERSION=snapshot" >> "$GITHUB_OUTPUT"
          fi
      - name: build site ðŸ”¨
        working-directory: site
        shell: bash
        env:
          REACT_APP_VERSION: ${{ steps.set-version.outputs.BUILD_VERSION }}
          REACT_APP_HASH: ${{ steps.gitvars.outputs.SHORT_SHA }}
        run: |
          npm install
          if [[ "${{ github.head_ref || github.ref_name }}" != "main" ]]; then
            export PUBLIC_URL="/${{ github.head_ref || github.ref_name }}"
          fi
          npm run build
      - name: deploy ðŸš›
        shell: bash
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          if [[ "${{ github.head_ref || github.ref_name }}" == "main" ]]; then
            export TARGET_PATH="${{ secrets.DEPLOY_PATH }}"
          else
            export TARGET_PATH="/dev.lunchdeal.li/httpdocs/${{ github.head_ref || github.ref_name }}"
          fi
          echo -e "${{ secrets.DEPLOY_KEY }}" >__TEMP_INPUT_KEY_FILE
          chmod 600 __TEMP_INPUT_KEY_FILE
          ssh -o StrictHostKeyChecking=no -i __TEMP_INPUT_KEY_FILE "${{ secrets.DEPLOY_USER }}"@"${{ secrets.DEPLOY_HOST }}" "rm -rf /tmp/upload_tmp; mkdir /tmp/upload_tmp"
          scp -o StrictHostKeyChecking=no -i __TEMP_INPUT_KEY_FILE -r site/build/* "${{ secrets.DEPLOY_USER }}"@"${{ secrets.DEPLOY_HOST }}":/tmp/upload_tmp
          ssh -o StrictHostKeyChecking=no -i __TEMP_INPUT_KEY_FILE "${{ secrets.DEPLOY_USER }}"@"${{ secrets.DEPLOY_HOST }}" "rm -rf ${TARGET_PATH}/*; mkdir -p ${TARGET_PATH}; cp -R /tmp/upload_tmp/* ${TARGET_PATH}"
          #"${{ secrets.DEPLOY_PATH }}"
