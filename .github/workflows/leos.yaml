name: leos
on:
  workflow_dispatch:
  schedule:
    - cron: '30 7 * * 1'
permissions: 
  contents: write
  packages: write
  pull-request: write
jobs:
  detectweek:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.week.outputs.success }}
    steps:
    - name: week
      shell: bash
      run: |
        echo "success=$([ $(expr $(date +%W) % 2) -eq 1 ] && echo yes || echo no)" >> "$GITHUB_OUTPUT"
  download:
    needs: detectweek
    if: >-
      ${{ 
        github.event_name == 'workflow_dispatch' 
        || github.event_name == 'schedule' && needs.detectweek.outputs.run == 'yes'
      }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/holygrolli/whatsupforlunch:main
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: >-
            ${{
              github.event_name == 'schedule' && 'main' || ''
            }}
      - name: get new links
        shell: bash
        run: |
          WD=${PWD}
          mkdir -p tmp
          scrapy runspider locations/leos/scra.py --nolog | sort > tmp/scraped_links.txt
          cd tmp
          while IFS= read -r line; do
            curl -sOL $line
          done < <(comm -13 ../data/leos/scraped_done.txt scraped_links.txt)
      - id: setmatrix
        working-directory: tmp
        run: |
          find . -name '*.png' -or -name '*.jpg' -printf '%P\n'
          matrixInput=$(find . -name '*.png' -or -name '*.jpg' -printf '%P\n') # Creates array of all png files in tmp folder
          echo -n "$matrixInput"
          # Start Generate Json String
          echo "$matrixInput" | \
          jq --slurp --raw-input -c 'split("\n")[:-1]| map(select(length>0))' > matrix
          cat ./matrix
          # End Generate Json String
          matrixStringifiedObject=$(cat ./matrix) # Use this as jq @sh not working right
          echo "::set-output name=matrix::$matrixStringifiedObject"
      - name: Archive all pngs
        uses: actions/upload-artifact@v3
        with:
          name: pngs
          retention-days: 30
          path: |
            tmp
  process:
    needs: download
    if: ${{ needs.download.outputs.matrix != '' && toJson(fromJson(needs.download.outputs.matrix)) != '[]' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/holygrolli/whatsupforlunch:main
    strategy:
      max-parallel: 1
      matrix:
        files: ${{fromJson(needs.download.outputs.matrix)}}
        # include:
        #   - files: KW-27-und-KW-28_2023_separated_2.pdf
    concurrency: singlethread
    steps:
    - name: checkout source code
      uses: actions/checkout@v3
      with:
        ref: >-
          ${{
            github.event_name == 'schedule' && 'main' || ''
          }}
    - name: fetch latest git
      if: ${{ !github.event.act }} # skip during local actions testing
      shell: bash
      run: |
        git config --system --add safe.directory $PWD
        git pull
    - name: Download png artifacts
      uses: actions/download-artifact@v3
      with:
        name: pngs
        path: tmp
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Configure AWS Profile
      run: |
        ls -al
        mkdir -p ~/.aws
        cat > ~/.aws/config << EOF
        [default]
        region = eu-central-1
        aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EOF
        cat ~/.aws/config
    - name: Process png ${{ matrix.files }}
      working-directory: tmp
      run: textractor detect-document-text ${{ matrix.files }} output.json --overlay ALL --print ALL
    - name: extract text
      working-directory: tmp
      run: |
        python ../locations/leos/process_textractor_result.py output.json
    - name: process txt with chatgpt
      working-directory: tmp
      env:
        OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
      shell: bash
      run: |
        python ../locations/leos/process_chatgpt.py ../locations/leos/prompt.txt output.txt
        mkdir -p ../data/leos
        cp final.json ../data/leos/$(date -d"$(jq -r 'keys[0]' final.json)" +%Y-%V).json
        CURRENTFILE=${{ matrix.files }}
        cat ../data/leos/scraped_done.txt <(echo $'\n'$(cat scraped_links.txt | grep ${CURRENTFILE%_separated*})) | sort -u | grep . > scraped_done.txt
        cp scraped_done.txt ../data/leos/scraped_done.txt
    - name: Archive all tmp files
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.files }}-processed
        retention-days: 5
        path: |
          tmp
    - name: Create Pull Request
      if: ${{ !github.event.act }}
      uses: peter-evans/create-pull-request@v5
      with:
        add-paths: |
          data
        branch: ${{ github.workflow }}-cron
        commit-message: "chore(data): automated scraping"
        labels: auto-approve-cron
